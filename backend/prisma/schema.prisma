generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  email        String    @unique
  passwordHash String
  name         String
  createdAt    DateTime  @default(now())
  projects     Project[]

  @@map("users")
}

model Project {
  id          String    @id @default(uuid())
  userId      String
  name        String
  description String?
  createdAt   DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  prompts     Prompt[]
  messages    Message[]
  files       File[]

  @@map("projects")
}

model Prompt {
  id        String   @id @default(uuid())
  projectId String
  title     String
  content   String
  createdAt DateTime @default(now())
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("prompts")
}

model Message {
  id        String      @id @default(uuid())
  projectId String
  role      MessageRole
  content   String
  createdAt DateTime    @default(now())
  project   Project     @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("messages")
}

enum MessageRole {
  user
  assistant
  system
}

model File {
  id             String   @id @default(uuid())
  projectId      String
  filename       String
  storageUrl     String
  providerFileId String?
  createdAt      DateTime @default(now())
  project        Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("files")
}
